@model QuizApplication.Models.QuizViewModel
@{
    ViewData["Title"] = Model.Quiz.Title;
    var question = Model.Quiz.Questions[Model.CurrentQuestionIndex];
    var progress = ((Model.CurrentQuestionIndex + 1) / (double)Model.Quiz.Questions.Count) * 100;
    var selectedAnswerId = Model.UserAnswers.ContainsKey(question.Id) ? Model.UserAnswers[question.Id] : 0;

    // Calculate time per question (2 minutes)
    var timePerQuestion = TimeSpan.FromMinutes(2);
    var totalQuizTime = TimeSpan.FromMinutes(2 * Model.Quiz.Questions.Count);
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <!-- Timer Display -->
            <div class="text-center mb-4">
                <div class="timer-info mb-2">
                    <small class="text-muted">
                        <i class="fas fa-info-circle"></i>
                        You have <strong>2 minutes</strong> per question
                    </small>
                </div>
                <div id="timer" class="timer-container">
                    <i class="fas fa-clock"></i>
                    Time Remaining for This Question:
                    <span id="time-remaining">02:00</span>
                </div>
            </div>

            <!-- Progress Bar -->
            <div class="mb-4">
                <div class="d-flex justify-content-between mb-2">
                    <span>Question @(Model.CurrentQuestionIndex + 1) of @Model.Quiz.Questions.Count</span>
                    <span>@Math.Round(progress)%</span>
                </div>
                <div class="progress" style="height: 10px;">
                    <div class="progress-bar bg-primary" role="progressbar"
                         style="width: @progress%"
                         aria-valuenow="@progress" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
            </div>

            <!-- Quiz Card -->
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">@Model.Quiz.Title</h4>
                </div>
                <div class="card-body">
                    <form method="post" asp-action="SubmitAnswer" id="quiz-form">
                        <input type="hidden" name="Quiz.Id" value="@Model.Quiz.Id" />
                        <input type="hidden" name="CurrentQuestionIndex" value="@Model.CurrentQuestionIndex" />

                        @foreach (var kvp in Model.UserAnswers)
                        {
                            <input type="hidden" name="UserAnswers[@kvp.Key]" value="@kvp.Value" />
                        }

                        <h5 class="card-title text-dark mb-4">@question.Text</h5>

                        <div class="list-group">
                            @foreach (var answer in question.Answers)
                            {
                                var isChecked = selectedAnswerId == answer.Id;

                                <label class="list-group-item list-group-item-action">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio"
                                               name="SelectedAnswerId"
                                               value="@answer.Id"
                                               id="answer-@answer.Id"
                                               @(isChecked ? "checked" : "") />
                                        <label class="form-check-label w-100" for="answer-@answer.Id">
                                            <strong>@answer.Letter.</strong> @answer.Text
                                        </label>
                                    </div>
                                </label>
                            }
                        </div>

                        <div class="d-flex justify-content-between mt-4">
                            @if (Model.CurrentQuestionIndex > 0)
                            {
                                <button type="submit" name="action" value="Previous"
                                        class="btn btn-outline-primary">
                                    ← Previous
                                </button>
                            }
                            else
                            {
                                <div></div>
                            }

                            @if (Model.CurrentQuestionIndex == Model.Quiz.Questions.Count - 1)
                            {
                                <button type="submit" name="action" value="Submit"
                                        class="btn btn-success">
                                    Submit Quiz ✓
                                </button>
                            }
                            else
                            {
                                <button type="submit" name="action" value="Next"
                                        class="btn btn-primary">
                                    Next →
                                </button>
                            }
                        </div>
                    </form>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="text-center mt-3">
                <form method="post" asp-action="SubmitQuiz" class="d-inline">
                    <input type="hidden" name="quizId" value="@Model.Quiz.Id" />
                    <button type="submit" class="btn btn-warning">Submit Now</button>
                </form>
                <a href="@Url.Action("RetakeQuiz", new { id = Model.Quiz.Id })"
                   class="btn btn-outline-warning">
                    Retake Quiz
                </a>
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">Back to Quizzes</a>
            </div>
        </div>
    </div>
</div>

<!-- Time Up Modal -->
<div class="modal fade" id="timeUpModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Time's Up!</h5>
            </div>
            <div class="modal-body text-center">
                <i class="fas fa-clock fa-3x text-danger mb-3"></i>
                <h4>Time for this question has expired!</h4>
                <p>Moving to next question in 3 seconds...</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        class QuestionTimer {
            constructor(questionIndex, totalQuestions, quizId) {
                this.questionIndex = questionIndex;
                this.totalQuestions = totalQuestions;
                this.quizId = quizId;
                this.timePerQuestion = 2 * 60; // 2 minutes in seconds
                this.remainingSeconds = this.timePerQuestion;
                this.timerInterval = null;
                this.isRunning = false;
            }

            start() {
                if (this.isRunning) return;

                this.isRunning = true;
                this.timerInterval = setInterval(() => {
                    this.remainingSeconds--;
                    this.updateDisplay();

                    if (this.remainingSeconds <= 0) {
                        this.stop();
                        this.onTimeUp();
                    }

                    // Warning when 30 seconds left
                    if (this.remainingSeconds === 30) {
                        this.showWarning();
                    }

                    // Critical warning when 10 seconds left
                    if (this.remainingSeconds === 10) {
                        this.showCriticalWarning();
                    }
                }, 1000);
            }

            stop() {
                this.isRunning = false;
                if (this.timerInterval) {
                    clearInterval(this.timerInterval);
                    this.timerInterval = null;
                }
            }

            updateDisplay() {
                const minutes = Math.floor(this.remainingSeconds / 60);
                const seconds = this.remainingSeconds % 60;
                const timeString = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;

                const timerElement = document.getElementById('time-remaining');
                if (timerElement) {
                    timerElement.textContent = timeString;
                }

                const timerContainer = document.getElementById('timer');
                if (timerContainer) {
                    if (this.remainingSeconds <= 10) {
                        timerContainer.classList.add('timer-critical');
                        timerContainer.classList.remove('timer-warning');
                    } else if (this.remainingSeconds <= 30) {
                        timerContainer.classList.add('timer-warning');
                        timerContainer.classList.remove('timer-critical');
                    } else {
                        timerContainer.classList.remove('timer-warning', 'timer-critical');
                    }
                }
            }

            showWarning() {
                // Visual warning only
            }

            showCriticalWarning() {
                // More intense visual warning
            }

            onTimeUp() {
                const timeUpModal = new bootstrap.Modal(document.getElementById('timeUpModal'));
                timeUpModal.show();

                // Auto-move to next question after 3 seconds
                setTimeout(() => {
                    this.autoMoveToNextQuestion();
                }, 3000);
            }

            autoMoveToNextQuestion() {
                // If this is not the last question, move to next
                if (this.questionIndex < this.totalQuestions - 1) {
                    // Submit the form with "Next" action
                    const form = document.getElementById('quiz-form');
                    const nextButton = form.querySelector('button[value="Next"]');
                    if (nextButton) {
                        // Set action to "Next" and submit
                        const actionInput = document.createElement('input');
                        actionInput.type = 'hidden';
                        actionInput.name = 'action';
                        actionInput.value = 'Next';
                        form.appendChild(actionInput);
                        form.submit();
                    }
                } else {
                    // If it's the last question, submit the quiz
                    const form = document.getElementById('quiz-form');
                    const submitButton = form.querySelector('button[value="Submit"]');
                    if (submitButton) {
                        const actionInput = document.createElement('input');
                        actionInput.type = 'hidden';
                        actionInput.name = 'action';
                        actionInput.value = 'Submit';
                        form.appendChild(actionInput);
                        form.submit();
                    }
                }
            }
        }

        // Initialize timer when page loads
        document.addEventListener('DOMContentLoaded', function() {
            const currentQuestionIndex = @Model.CurrentQuestionIndex;
            const totalQuestions = @Model.Quiz.Questions.Count;
            const quizId = @Model.Quiz.Id;

            const questionTimer = new QuestionTimer(currentQuestionIndex, totalQuestions, quizId);
            questionTimer.start();

            // Store timer reference
            window.questionTimer = questionTimer;
        });

        // Stop timer when form is submitted normally
        document.getElementById('quiz-form')?.addEventListener('submit', function() {
            if (window.questionTimer) {
                window.questionTimer.stop();
            }
        });

        // Reset timer when navigating between questions manually
        document.querySelectorAll('button[type="submit"]').forEach(button => {
            button.addEventListener('click', function() {
                if (window.questionTimer) {
                    window.questionTimer.stop();
                }
            });
        });
    </script>
}